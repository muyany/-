	全屏独占模式意味着应用程序直接控制整个屏幕的显示输出，而不是作为一个窗口运行在操作系统提供的桌面环境中。在这种模式下，应用程序会请求操作系统允许它直接管理显示设备的硬件资源。这通常包括直接访问帧缓冲区（Frame Buffer），即显存中用于存储即将显示到屏幕上的图像数据的区域。
	在标准窗口模式或窗口化全屏模式下，DXGI可以有效地与操作系统的桌面窗口管理器（如	DWM，Desktop Window Manager）一起工作，通过交换链来管理和同步图像帧的显示。交换链允许应用程序在一个后台缓冲区中渲染帧，然后将其快速交换到前台显示，这个过程通常是同步和优化过的。
	当应用程序在全屏独占模式下运行时，它可能会创建一个自己的交换链，直接与显卡的输出连接，绕过标准的操作系统层。这种直接控制可以减少延迟、提高帧率，特别是在图形密集型应用程序中。然而，这也意味着DXGI可能无法插入到这个过程中来捕获屏幕，因为标准的API调用无法访问或控制这个专门的帧缓冲区。	
	由于DXGI是设计来在标准的桌面窗口环境中工作的，它依赖于操作系统能够访问和管理所有的图形和显示资源。当应用程序直接管理帧缓冲区时，DXGI可能无法“看到”或访问这些专用的帧缓冲区，因为它们不是通过标准的操作系统路径创建和管理的。

交换链的工作原理
	多缓冲管理：交换链最常见的配置是使用至少两个缓冲区：一个前台缓冲区和一个或多个后台缓冲区。前台缓冲区是当前连接到屏幕上并正在显示的图像，而后台缓冲区用于渲染下一帧图像。
	帧渲染：当程序或游戏渲染一帧图像时，它不是直接渲染到正在显示的缓冲区（即前台缓冲区），而是渲染到后台缓冲区。这样做可以避免渲染过程中产生的图像撕裂（即屏幕上的图像部分更新不同步）。
	缓冲区交换：一旦后台缓冲区的帧渲染完成，它就会与前台缓冲区交换，即所谓的“翻转”。这个操作可以通过各种方式完成，例如：直接交换缓冲区的指针、复制帧数据等。这个翻转通常是在垂直同步（VSync）期间进行，即显示器完成当前帧显示并准备开始新一帧显示的瞬间，从而最大程度减少视觉上的撕裂和跳帧现象。